name: npm test
on:
  push:
    branches: [main]
    paths-ignore:
      - ".github/**"
  workflow_dispatch:

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: npm-test
  cancel-in-progress: false

env:
  VITE_BROWSERSTACK_USERNAME: "${{ secrets.VITE_BROWSERSTACK_USERNAME }}"
  VITE_BROWSERSTACK_KEY: "${{ secrets.VITE_BROWSERSTACK_KEY }}"

jobs:
  test-cli:
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    name: "node.js lts ${{ matrix.os }}"
    timeout-minutes: 10
    runs-on: ${{ matrix.os }}
    environment: BrowserStackEnv
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: "npm"

      - name: Build
        run: |
          npm install
          npm run build
          npm test -- -t "LocalCLI"


  test-node-lts:
    name: "node.js lts"
    runs-on: ubuntu-latest
    needs: [test-cli]
    environment: BrowserStackEnv
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: "npm"

      - name: Build
        run: |
          npm install
          npm run build
          npm test


  test-node-v18:
    name: "node.js v18"
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: [test-node-lts]
    environment: BrowserStackEnv
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Build
        run: |
          npm install
          npm run build
          npm test
